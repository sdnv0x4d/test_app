name: "Main workflow for test_app"
on:
  push:
    branches: ["main"]
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Build test_app
        uses: D3rHase/ssh-command-action@v0.3.1
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          command: |
            cd ${{ secrets.PROJECT_FOLDER }};
            git clone https://github.com/sdnv0x4d/test_app;
            cd /test_app;
            docker compose build;
  validator:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      # - name: Clone repo
      #   uses: GuillaumeFalourd/clone-github-repo-action@v2.3
      #   with:
      #     depth: 1
      #     branch: 'main'
      #     owner: 'sdnv0x4d'
      #     repository: 'test_app'
      # - name: ls test_app
      #   uses: D3rHase/ssh-command-action@v0.3.1
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     user: ${{ secrets.SSH_USER }}
      #     private_key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     command: |
      #       ls /test_app;
      # - name: HTML5 Validator
      #   uses: Cyb3r-Jak3/html5validator-action@master
      #   with:
      #     root: html/
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: HTML5 Validator
        # You may pin to the exact commit or the version.
        # uses: Cyb3r-Jak3/html5validator-action@02b835cb536d5a22714059a755940fa6f1f3fe1b
        uses: Cyb3r-Jak3/html5validator-action@v7.1.1
        with:
          # Path of the files to test
          root: ./ # optional
        continue-on-error: true



  deploy:
    needs: [build, validator]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy test_app to prod
        uses: D3rHase/ssh-command-action@v0.3.1
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          command: |
            cd ${{ secrets.PROJECT_FOLDER }}/test_app;
            docker compose up -d;
            sleep 10;
            echo "Latest logs:"
            docker compose logs;